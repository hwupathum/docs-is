openapi: 3.0.0
info:
  version: "v1"
  title: 'Configurations API'
  description: |
    This document specifies the **Server related Configurations RESTful API** of organizations in **WSO2 Identity Server**.
security:
  - OAuth2: []
paths:
  /configs:
    get:
      tags:
        - Server Configs
      summary: Retrieve server configs
      operationId: getConfigs
      description: |
        Retrieve server configs of the organization. 
        
        <b>Scope(Permission) required:</b> `internal_login`
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerConfig'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codeSamples:
        - lang: Curl
          source: |
            curl -X 'GET' \
            'https://localhost:9443/o/api/server/v1/configs' \
            -H 'accept: application/json' \
            -H 'Authorization: Bearer {bearer_token}'
  /configs/authentication/inbound/saml2:
    get:
      tags:
        - Inbound Authentication Configurations
      summary: Retrieve SAML2 inbound authentication configurations
      description: |
        Retrieve SAML2 inbound authentication configurations of the organization.
        
        <b>Scope(Permission) required:</b> `internal_login`
      operationId: getSAMLInboundAuthConfig
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InboundAuthSAML2Config'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codeSamples:
        - lang: Curl
          source: |
            curl -X 'GET' \
            'https://localhost:9443/o/api/server/v1/configs/authentication/inbound/saml2' \
            -H 'accept: application/json' \
            -H 'Authorization: Bearer {bearer_token}'                 
    patch:
      tags:
        - Inbound Authentication Configurations
      summary: Update SAML2 inbound authentication configurations
      description: |
        Patch SAML2 inbound authentication configurations of the organization.
        
        <b>Scope(Permission) required:</b> `internal_org_config_update`
      operationId: updateSAMLInboundAuthConfig
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InboundAuthSAML2Config'
      responses:
        '200':
          description: Successful response
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codeSamples:
        - lang: Curl
          source: |
            curl -X 'PATCH' \
            'https://localhost:9443/o/api/server/v1/configs/authentication/inbound/saml2' \
            -H 'accept: */*' \
            -H 'Authorization: Bearer {bearer_token}' \
            -H 'Content-Type: application/json' \
            -d '{
            "destinationURLs": [
              "https://localhost:9443/o/{ORGANIZATION_ID}/samlsso"
            ],
            "metadataValidityPeriod": 60,
            "enableMetadataSigning": false
            }'                 
    delete:
      tags:
        - Inbound Authentication Configurations
      summary: Delete SAML2 inbound authentication configurations.
      description: |
        Delete all SAML2 inbound authentication configurations of the organization.<br><br>
        <b>Scope (Permission) required:</b> internal_org_config_update
      operationId: deleteSAMLInboundAuthConfig
      responses:
        '204':
          description: Successful deletion
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codeSamples:
        - lang: Curl
          source: |
            curl -X 'DELETE' \
            'https://localhost:9443/o/api/server/v1/configs/authentication/inbound/saml2' \
            -H 'accept: application/json' \
            -H 'Authorization: Bearer {bearer_token}'  
  /configs/authentication/inbound/passivests:
    get:
      tags:
        - Inbound Authentication Configurations
      summary: Retrieve WS Federation (Passive STS) inbound authentication configurations
      description: |
        Retrieve WS Federation (Passive STS) inbound authentication configurations of the organization.
        
        <b>Scope(Permission) required:</b> `internal_login`
      operationId: getPassiveSTSInboundAuthConfig
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InboundAuthPassiveSTSConfig'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codeSamples:
        - lang: Curl
          source: |
            curl -X 'GET' \
            'https://localhost:9443/o/api/server/v1/configs/authentication/inbound/passivests' \
            -H 'accept: application/json' \
            -H 'Authorization: Bearer {bearer_token}'                  
    patch:
      tags:
        - Inbound Authentication Configurations
      summary: Update WS Federation (Passive STS) inbound authentication configurations
      description: |
        Patch WS Federation (Passive STS) inbound authentication configurations of the organization.
        
        <b>Scope(Permission) required:</b> `internal_org_config_update`
      operationId: updatePassiveSTSInboundAuthConfig
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InboundAuthPassiveSTSConfig'
      responses:
        '200':
          description: Successful response
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codeSamples:
        - lang: Curl
          source: |
            curl -X 'PATCH' \
            'https://localhost:9443/o/api/server/v1/configs/authentication/inbound/passivests' \
            -H 'accept: */*' \
            -H 'Authorization: Bearer {bearer_token}' \
            -H 'Content-Type: application/json' \
            -d '{
            "enableRequestSigning": false
            }' 
    delete:
      tags:
        - Inbound Authentication Configurations
      summary: Delete WS Federation (Passive STS) inbound authentication configurations.
      description: |
        Delete all WS Federation (Passive STS) inbound authentication configurations of the organization.<br><br>
        <b>Scope (Permission) required:</b> internal_org_config_update
      operationId: deletePassiveSTSInboundAuthConfig
      responses:
        '204':
          description: Successful deletion
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codeSamples:
        - lang: Curl
          source: |
            curl -X 'DELETE' \
            'https://localhost:9443/o/api/server/v1/configs/authentication/inbound/passivests' \
            -H 'accept: application/json' \
            -H 'Authorization: Bearer {bearer_token}'                  
servers:
  - url: 'https://{serverUrl}/t/{tenantDomain}/o/api/server/v1'
    variables:
      serverUrl:
        default: localhost:9443
      tenantDomain:
        default: carbon.super
components:
  securitySchemes:
    OAuth2:
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: 'https://localhost:9443/oauth2/authorize'
          tokenUrl: 'https://localhost:9443/oauth2/token'
          scopes: {}
  schemas:
    Error:
      type: object
      properties:
        code:
          type: string
          example: AAA-00000
        message:
          type: string
          example: Some Error Message
        description:
          type: string
          example: Some Error Description
        traceId:
          type: string
          example: e0fbcfeb-3617-43c4-8dd0-7b7d38e13047
    ServerConfig:
      type: object
      properties:
        homeRealmIdentifiers:
          type: array
          description: "The home realm identifier for the resident identity provider"
          items:
            type: string
            example: "localhost"
        idleSessionTimeoutPeriod:
          type: string
          description: "The idle session timeout in minutes"
          example: "15"
          default: "15"
        rememberMePeriod:
          type: string
          description: "The remember me period in minutes"
          example: "20160"
          default: "20160"
        provisioning:
          $ref: '#/components/schemas/ProvisioningConfig'
        authenticators:
          $ref: '#/components/schemas/AuthenticatorListResponse'
        cors:
          $ref: '#/components/schemas/CORSConfig'
    ProvisioningConfig:
      type: object
      properties:
        inbound:
          $ref: '#/components/schemas/InboundConfig'
    InboundConfig:
      type: object
      properties:
        scim:
          $ref: '#/components/schemas/ScimConfig'
    ScimConfig:
      type: object
      properties:
        provisioningUserstore:
          type: string
          description: "User store domain name to inbound provision users and groups. This property becomes only applicable if the enableProxyMode config gets set to false"
          default: "PRIMARY"
          example: "PRIMARY"
        enableProxyMode:
          type: boolean
          description: "If this property gets set to true, Users/Groups do not provision to the user store. They only outbound provision"
          example: false
          default: false
    AuthenticatorListResponse:
      type: array
      items:
        $ref: '#/components/schemas/AuthenticatorListItem'
    AuthenticatorListItem:
      type: object
      properties:
        id:
          type: string
          example: QmFzaWNBdXRoZW50aWNhdG9y
          readOnly: true
        name:
          type: string
          example: BasicAuthenticator
        displayName:
          type: string
          example: basic
        description:
          type: string
          example: "Description for federated authenticator configuration."
        image:
          type: string
          example: "https://example.com/logo/my-logo.png"
        isEnabled:
          type: boolean
          default: true
          example: true
        definedBy:
          type: string
          enum:
            - SYSTEM
            - USER
        type:
          type: string
          enum:
            - LOCAL
            - REQUEST_PATH
        tags:
          type: array
          items:
            type: string
          example: [2FA,MFA]
          readOnly: true
        self:
          type: string
          example: /api/server/v1/configs/authenticators/QmFzaWNBdXRoZW50aWNhdG9y
    CORSConfig:
      type: object
      properties:
        allowGenericHttpRequests:
          type: boolean
          description: If true, generic HTTP requests must be allowed to pass through the filter, else, only valid and accepted CORS must be allowed (strict CORS filtering).
          example: true
        allowAnyOrigin:
          type: boolean
          description: If true the CORS valve must allow requests from any origin, else the origin whitelist must be consulted.
          example: false
        allowSubdomains:
          type: boolean
          description: If true, the CORS valve must allow requests from any origin which is a subdomain origin of the allowed origins.
          example: false
        supportedMethods:
          type: array
          description: The supported HTTP methods. Requests for methods not included here must be refused by the CORS filter with an HTTP 405 "Method not allowed" response.
          items:
            type: string
            example: GET
        supportAnyHeader:
          type: boolean
          description: If true the CORS valve must support any requested header, else the supported headers list must be consulted.
          example: false
        supportedHeaders:
          type: array
          description: The names of the supported author request headers.
          items:
            type: string
            example: Content-Type
        exposedHeaders:
          type: array
          description: The non-simple response headers that the web browser should expose to the author of the CORS request.
          items:
            type: string
            example: X-Custom-1
        supportsCredentials:
          type: boolean
          description: Whether user credentials, such as cookies, HTTP authentication or client-side certificates, are supported.
          example: true
        maxAge:
          type: number
          description: Indicates how long the results of a preflight request can be cached by the web client, in seconds. If -1 then unspecified.
          example: 3600
    InboundAuthSAML2Config:
      type: object
      properties:
        destinationURLs:
          type: array
          description: "List of destination URLs"
          items:
            type: string
          example: ["https://localhost:9443/samlsso"]
        metadataValidityPeriod:
          type: number
          description: "SAML metadata validity period in minutes"
          example: 60
        enableMetadataSigning:
          type: boolean
          description: "Enable SAML metadata signing"
          example: false
        metadataEndpoint:
          type: string
          description: "SAML metadata endpoint"
          readOnly: true
          example: "https://localhost:9443/identity/metadata/saml2"
    InboundAuthPassiveSTSConfig:
      type: object
      properties:
        enableRequestSigning:
          type: boolean
          description: "Enable authentication requests signing"
          example: false
        passiveSTSUrl:
          type: string
          description: "Passive STS URL"
          readOnly: true
          example: "https://localhost:9443/passivests"
